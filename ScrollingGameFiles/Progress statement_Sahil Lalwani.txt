Name: Sahil Lalwani

Progress statement for Project 02: Scrolling Game Checkpoint

Currently, my submitted code for the base game is working and has been programmed to support all the features as required and specified in the project handout and the demo game. As part of my progress, I have also worked on improving the program design by using helper methods. For example, the function populateRightEdge() is supported by 2 helper functions: fill_elements(int rand_num, int i) takes in a randomly generated number and the row number of the cell in the last column as parameters and randomly fills the cells on the right edge of the game with get_image, avoid_image, or a blank space (no get or avoid objects), while path_clear(int count) takes the count of the number of get objects and blank spaces created in one instance of random population of the right edge as a parameter and ensures that the user always has a path through the game without colliding with the avoid object. Other than that, scroll_left() is supported by the helper methods condition_user_image(String img) and record_collision(Location loc). handleKeyPress() is supported by various helper methods to reduce redundancy in terms of writing similar code for various key presses with slight modifications. For example, change_user_location updates the status of the grid and the user location for up, down, left and right key presses. This made the code easier to follow and debug. The descriptions for each of the helper methods have also been specified in the comments in the code. The methods follow SOFA principle, and the data is easy to follow and read.

However, I would like to test this code with some more edge cases, in the upcoming week, to ensure my code works for all possible scenarios and conditions. I believe that I will be able to identify those edge cases after playing the demo version and my base game several more times over the coming week, and comparing them in detail to find any edge cases that my code might not cover. In my current code, I am also currently trying to figure out how the computer can store various screenshots for the game in the same directory, even if you play the game multiple times. My code currently generates unique image files for all screenshots saved during 1 game in a directory, but is unable to save screenshots, in the same directory, that are taken during other games played. I aim to work on that further. Besides, I am also currently thinking about ideas for my creative game. I have some creative themes in mind, but I would like to analyze them further and finalize an idea, following my detailed work on the source code for the same. 